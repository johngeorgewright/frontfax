// Generated by CoffeeScript 1.4.0
var app, assets, child, config, controllers, express, http, path, _ref, _ref1, _ref2;

config = require('config');

controllers = require('./controllers');

express = require('express');

http = require('http');

path = require('path');

app = express();

assets = path.resolve('assets');

app.configure(function() {
  app.set('port', process.env.PORT || 8080);
  app.set('views', path.join(__dirname, 'views'));
  app.set('view engine', 'jade');
  app.use(express.logger('dev'));
  app.use(express.methodOverride());
  app.use(app.router);
  return app.use(express.errorHandler());
});

if (config.proxy != null) {
  app.use(controllers.proxy.buffer());
}

if (((_ref = config.assets) != null ? _ref.images : void 0) != null) {
  app.use(config.assets.images, express["static"](path.join(assets, 'images')));
}

if (((_ref1 = config.assets) != null ? _ref1.css : void 0) != null) {
  app.use(config.assets.css, express["static"](path.join(assets, 'css')));
}

if (((_ref2 = config.assets) != null ? _ref2.js : void 0) != null) {
  app.use(config.assets.js, express["static"](path.join(assets, 'js')));
}

app.use(express["static"](path.resolve('static')));

if ((config.base != null) && config.base) {
  child = app;
  app = express();
  app.configure(function() {
    app.set('port', child.get('port'));
    if (config.proxy != null) {
      app.use(controllers.proxy.buffer());
    }
    return app.use(config.base, child);
  });
}

if (config.proxy != null) {
  app.use(controllers.proxy.request(config.proxy));
}

app.start = function() {
  var port, server;
  server = http.createServer(app);
  port = app.get('port');
  return server.listen(port, function() {
    return console.log("Frontfax server listening on port " + port);
  });
};

module.exports = app;
